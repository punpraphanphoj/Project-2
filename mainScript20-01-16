#Project 2, Main script

import numpy as np
import os
import pandas as pd


def mainScript():
    

    #Variable to store file name
    filename=np.empty([0])   
    
    print('\f\n===========================================\n'
          'Welcome to program for grading students\n\n'
          'To continue, please type in the database file name.\n'
          'To exit, please press 5.\n'
          '\n===========================================')
    while True:
        try:
            filename=input('Please input file name and csv extension [filename.csv]\n'
            'Make sure the file is in the current working directory:')
            if filename=='5':
                break 
            if (os.path.isfile(filename)):
                break
        except:
            pass
    if filename=='5':
        raise SystemExit
        
        
    database=np.array(pd.read_csv(filename))
    rawdata=pd.read_csv(filename)
    rawdata=rawdata.columns
    
    print('The number of students is %d and the number of assignments is %d' %(database.shape[0], database.shape[1]-2))
    
    
    #Main menu. Loop until user quits
    while True:
        print('\f\n===========================================\n'
                'Welcome to program for grading students\n\n'
                'Please select on of the following options:\n'
                '1-Load new data.\n'
                '2-Check for data errors.\n'
                '3-Generate plots.\n'
                '4-Display list of grades.\n'
                '5-Exit.\n'
                '\n==========================================')
        #Check if data has been loaded
        if database.size==0:
            print('(The data has not been loaded)')
        else:
            print('(The data file "%s" has been loaded)'%filename)
        
       #Check the validity of the input (must be in range)
        while True:
            try:
                choice=float(input('Please select an option:'))
                print("\n")
                if (choice in range(1,6)):
                    break
                else:
                    print('Not valid number. Please try again')
            except ValueError:
                print('Not valid number. Please try again')
              
        
        #Option 1:Load new csv file
        if choice==1:
            while True:
                try:
                    filename=input('Please input file name and csv extension [filename.csv].'
                    'Make sure the file is in the current working directory:')
                    if (os.path.isfile(filename)):
                        break
                except:
                    pass
            database=np.array(pd.read_csv(filename))
            rawdata=pd.read_csv(filename)
            rawdata=rawdata.columns
                
            input('"%s" loaded. \nPress any key to return to main menu:'%filename)
        
        
        #Option 2:Check for data errors
        
        elif choice==2:
            h=0
            err=np.empty(np.size(database[0,:]))
            for i in range(database.shape[0]):
                for j in range(database.shape[0]):
                    if h>1:
                        print ("Student number %s is duplicated" %(database[j,0]))
                        np.vstack((err, database[j,:]))
                        np.delete(database, j, 0)
                    if database[0,i]==database[0,j]:
                        h+=1      
                h=0
            
            for i in range(database.shape[0]):
                for j in range(database.shape[1]-2):
                    if int(database[i,j+2])>12 or int(database[i,j+2])<(-3):
                        print("Invalid value of grade for student with number %s" %(database[i,0])) 
                        np.vstack((err,database[j,:]))
                        np.delete(database, j, 0)
                        
            err=np.delete(err,0,0)
            if sum(err)>1:
                print("This data is erroneous")
                print(err)
            else:
                print("There is no erroneous data")
                
            input('Press any key to return to main menu:') 
            
            
       #Option 3: Generate plots     
            
        elif choice==3:
            #Check if file has been loaded
            if database.size==0:
                print('Please load the data first (select option 1)\n')  
            else:
                from dataPlot import dataPlot
                dataPlot(database)
            
            input('Press any key to return to main menu:')      
        
    
       #Option 4:Display list of grade
        elif choice==4:
            
            gradelist=database
            for i in range(1,3):
                gradelist=np.delete((gradelist),0,1)
            for j in range(database.shape[0]):
                from roundGrade import roundGrade
                gradelist[j,:]=roundGrade(gradelist[j,:])
            
            #displaygrade=database[:,0]
            #displaygrade=np.append(displaygrade,database[:,1])
            
            from computeFinalGrades import computeFinalGrades
            grade=computeFinalGrades(database)
            
            finalprint=str("Student ID,Student name,")

            for i in range(database.shape[1]-2):
                finalprint+=str("Assignment %d,"%(i+1))
            finalprint+=str("Final grade,")
            

            for i in range(database.shape[0]):
                finalprint+=("%s,%s,"%(database[i,0],database[i,1]))
                for j in range(database.shape[1]-2):
                    finalprint+=("%s,"%(gradelist[i,j]))
                finalprint+=("%s,"%grade[i])
            #df=pd.DataFrame(finalprint[1:,1:], index=np.arange(1,finalprint.shape[0]), columns = finalprint[0,1:])
            finalprint=finalprint.split(",")
            finalprint=np.array(finalprint)
            finalprint=np.delete(finalprint,-1)
            finalprint.shape=(database.shape[0]+1,database.shape[1]+1)

            for i in range(finalprint.shape[1]):
                print("{:=<18}".format(''),end="")
            print("")
                
            for j in range(finalprint.shape[1]-1):
                print("||",end="")
                for i in range(finalprint.shape[0]+1):
                    print("{:17}".format(finalprint[j,i]),end="")
                print("||")
            
            for i in range(finalprint.shape[1]):
                print("{:=<18}".format(''),end="")
            print("")
            
            input('\nPress any key to return to main menu:')       
       
       #Option 5: Quit
        else:
            raise SystemExit
           
                 
mainScript()
